#!/usr/bin/env bash

echo root | su -c "
pacman-key --init
pacman-key --populate archlinuxarm
"

if [ "$(which sudo 2> /dev/null)" = "" ]; then
  echo -e "installing \x1B[1msudo\x1B[22m"
  echo root | su -c "bash <(curl -s https://archibold.io/install/sudo)"
  if [ "$(which sudo 2> /dev/null)" = "" ]; then
    echo -e "Unable to install \x1B[1msudo\x1B[22m"
    exit 1
  fi
  clear
fi

echo 'alarm' | sudo -S usermod -a -G wheel,games,power,optical,storage,scanner,lp,audio,video ${USER}

cd ~/

# avoid initial message
touch .hushlogin

# basic bashrc configuration
echo '
export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
shopt -s histappend                      # append to history instead of overwriting it
' >> ~/.bashrc

# ArchLinux initialization + update
while ! sudo pacman -Sy --needed --noconfirm cpupower
do
  :
done

echo "boost CPU performance"
sudo sh -c "echo 'governor=\"performance\"'>>/etc/default/cpupower"
sudo systemctl enable cpupower.service
sudo systemctl start cpupower.service

while ! sudo pacman -Su  --noconfirm
do
  :
done

sudo pacman -Sc --noconfirm

while ! sudo pacman -S --needed --noconfirm \
  dhcpcd ntp openssh \
  iptables dialog wpa_supplicant openssh libnotify \
  base-devel python git diffstat chrpath wget cpio pv \
  geoip geoip-database-extra geoclue \
  nss gperf libexif \
  ttf-dejavu
do
  :
done

sudo pacman -S --needed --noconfirm python2

sudo pacman -Sc --noconfirm

if [ "$TMP_TIME_UPDATED" != "true" ]; then
  echo -e "Updating time, \x1B[1mno password needed\x1B[22m, please wait ..."
  echo root | su -c "ntpdate pool.ntp.org
timedatectl set-local-rtc 1"
fi

# default locale
sudo sh -c "echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen"
sudo sh -c "echo 'LOCALE=en_US.UTF-8'>>/etc/locale.conf"
sudo sh -c "echo 'LANG=en_US.UTF-8'>>/etc/locale.conf"
sudo sh -c "echo 'LC_TIME=en_US.UTF-8'>>/etc/locale.conf"
sudo sh -c "localectl set-locale LANG=en_US.UTF-8"
sudo locale-gen
sudo sh -c 'locale > /etc/locale.conf'

# terminal welcome logo
if [ "$BENJA_LOGO" = "" ]; then
  echo "adding terminal welcome logo"
  curl -LOs https://archibold.io/benja/logo
  mv logo .logo
  sleep 1
fi

if [ "$GTK_THEME" = "" ]; then
  echo "using Adwaita:dark theme"
  export GTK_THEME="Adwaita:dark"
  echo "export GTK_THEME=\"${GTK_THEME}\"">>.bashrc
fi

# setup app folder
if [ ! -f /etc/systemd/system/app-disk.service ]; then
  mkdir -p ${HOME}/app
  APP_DISK=$(ls -l /dev/disk/by-label | grep APP | sed -e 's#^.*/##' 2> /dev/null)
  if [ "$APP_DISK" = "" ]; then
    APP_DISK=mmcblk0p3
    echo "forcing ~/app folder as /dev/${APP_DISK}"
  else
    echo "setting ~/app folder as /dev/${APP_DISK}"
  fi
  echo "[Unit]
Description=app ${HOME}/app disk

[Service]
User=root
Type=simple
ExecStart=/usr/bin/mount /dev/${APP_DISK} ${HOME}/app -o uid=${USER},gid=users,umask=0022

[Install]
WantedBy=multi-user.target
">${HOME}/app/app-disk.service
  echo "#!/usr/bin/env bash
mv ${HOME}/app/app-disk.service /etc/systemd/system/app-disk.service
systemctl enable app-disk.service
systemctl start app-disk.service
rm ${HOME}/app/bash
">${HOME}/app/bash
  sync
  sudo bash ${HOME}/app/bash
  sleep 1
fi

# configure 80 to 8080 redirect
if [ ! -f /etc/systemd/system/redirect80to8080.service ]; then
  echo "setting port 80 to 8080 redirects"
  echo "[Unit]
Description=Redirect 80 to 8080 service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/bin/iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
ExecStart=/usr/bin/iptables -t nat -I OUTPUT -p tcp -o lo --dport 80 -j REDIRECT --to-port 8080

[Install]
WantedBy=multi-user.target
" >redirect80to8080.service
  sudo mv redirect80to8080.service /etc/systemd/system/
  sudo systemctl enable redirect80to8080.service
  sleep 1
fi

# configure rmate
if [ ! -f /usr/bin/rmate ]; then
  echo "adding rmate"
  curl -LOs 'https://raw.githubusercontent.com/WebReflection/rmate/master/rmate'
  chmod a+x rmate
  sudo mv rmate /usr/bin/rmate
  sleep 1
fi

# configure hostname
if [ ! -f /etc/hostname ] || [ "$(cat /etc/hostname | grep ${USER}.local)" = "" ]; then
  echo "configuring hostname"
  if [ -f /etc/hostname ]; then
    cat /etc/hostname > hostname
  fi
  echo "${USER}.local" >> hostname
  sudo mv hostname /etc/
  sudo hostnamectl set-hostname "${USER}.local"
  sudo sed -i "s/localhost\$/localhost$(printf '\t')${USER}.local/g" /etc/hosts
  sleep 1
fi

# attempt to avoid suspend mode when on terminal
if [ "$(cat /etc/systemd/logind.conf | grep 'HandleSuspendKey=ignore')" = "" ]; then
  echo "ignoring suspend on terminal"
  sudo sh -c 'echo "HandleSuspendKey=ignore">>/etc/systemd/logind.conf'
  sudo sh -c 'echo "HandleLidSwitch=ignore">>/etc/systemd/logind.conf'
  sleep 1
fi

if [ "$(which echomd 2> /dev/null)" = "" ]; then
  echo "installing echomd"
  bash <(curl -s https://archibold.io/install/echomd)
fi
